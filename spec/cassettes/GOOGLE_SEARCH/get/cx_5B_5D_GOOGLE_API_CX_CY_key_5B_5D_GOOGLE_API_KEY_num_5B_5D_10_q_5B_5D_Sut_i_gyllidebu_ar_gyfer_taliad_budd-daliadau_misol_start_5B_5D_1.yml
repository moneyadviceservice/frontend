---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/customsearch/v1?cx=<GOOGLE_API_CX_CY>&key=<GOOGLE_API_KEY>&num=10&q=Sut%20i%20gyllidebu%20ar%20gyfer%20taliad%20budd-daliadau%20misol&start=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mas-Responsive/1.0 (Jon-Gilbraith-00224.local; jongilbraith; 83494) ruby/2.2.5
        (319; x86_64-darwin15)
      X-Request-Id:
      - 139eb796-5564-479c-b116-9c52941cf293
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Tue, 20 Dec 2016 14:01:08 GMT
      Date:
      - Tue, 20 Dec 2016 14:01:08 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"Km-rZ3xLOWf3nUikI4cgnYOU2vc/q1RASlVpGCFsewk5lCgB0zxy3I4"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '30597'
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="35,34"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Tue, 20 Dec 2016 14:01:09 GMT
recorded_with: VCR 3.0.3
