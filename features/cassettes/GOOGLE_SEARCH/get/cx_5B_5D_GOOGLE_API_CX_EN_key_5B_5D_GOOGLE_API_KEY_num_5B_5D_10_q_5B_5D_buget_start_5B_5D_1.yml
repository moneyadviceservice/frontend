---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/customsearch/v1?cx=<GOOGLE_API_CX_EN>&key=<GOOGLE_API_KEY>&num=10&q=buget&start=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Mas-Responsive/1.0 (Jon-Gilbraith-00224.local; jongilbraith; 32271) ruby/2.2.5
        (319; x86_64-darwin15)
      X-Request-Id:
      - 0c80312a-9d28-4fca-9d52-913ce33000c8
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Thu, 22 Dec 2016 14:18:40 GMT
      Date:
      - Thu, 22 Dec 2016 14:18:40 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"Km-rZ3xLOWf3nUikI4cgnYOU2vc/b_udlIpHMmbqnWGxMPL_DQ6mPSE"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      Content-Length:
      - '29854'
      Server:
      - GSE
      Alt-Svc:
      - quic=":443"; ma=2592000; v="35,34"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 22 Dec 2016 14:18:40 GMT
recorded_with: VCR 3.0.3
