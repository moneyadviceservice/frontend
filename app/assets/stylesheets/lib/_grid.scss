/////////////////////////////////////
// Grid - currently using singularity
// https://github.com/Team-Sass/Singularity
/////////////////////////////////////

// Custom function to calculate grid width based on number of columns * column width
@function grid-width($n) {
  @return $n * $column-default-width + ($n) * ($column-default-width * $gutters);
}

// Default settings
$column-default-width: 40px;
$gutters: 1/2;
$gutter-styles: 'split';
$breakpoint-to-ems: true;
$output: 'float';

// Default Column counts for different widths
$mq-xs-c:4;
$mq-s-c:6;
$mq-m-c:9;
$mq-l-c:12;
$mq-xl-c:18;

// Define min-width based on cols * colWidth
$mq-xs:0;
$mq-s:grid-width($mq-s-c);
$mq-m:grid-width($mq-m-c);
$mq-l:grid-width($mq-l-c);
$mq-xl:grid-width($mq-xl-c);

// Singularity - Define responsive grid columns at different widths
// add-grid(columns at width)
$grids: $mq-xs-c;
$grids: add-grid($mq-s-c at $mq-s);
$grids: add-grid($mq-m-c at $mq-m);
$grids: add-grid($mq-l-c at $mq-l);
$grids: add-grid($mq-xl-c at $mq-xl);

// Mixin to make it simpler to add grids-span wrapped in breakpoint
// example:
// @include add-grid-span($mq-xs, 4, 1);
@mixin add-grid-span($mq, $col, $pos:1) {
  @if $mq == 0 {
    @include grid-span($col, $pos);
  } @else {
    @include breakpoint($mq) {
      @include grid-span($col, $pos);
    }  
  }
}

// Mixin to make it simpler to add all grid spans as a fraction of total columns in one call
// example:
// @include add-all-grid-spans(1, 1, 1/3, 1/3, 1/3);
@mixin add-all-grid-spans($xs, $s, $m, $l, $xl) {
  @include add-grid-span($mq-xs, $mq-xs-c * $xs);
  @include add-grid-span($mq-s, $mq-s-c * $s);
  @include add-grid-span($mq-m, $mq-m-c * $m);
  @include add-grid-span($mq-l, $mq-l-c * $l);
  @include add-grid-span($mq-xl, $mq-xl-c * $xl);
}

